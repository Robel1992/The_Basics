 /*declare all h2 style elements in the HTML page red*/ 
 h2 {
    color: red;
}

/*Use a CSS Class to style an Element*/
.red-text {
    color: red;
}

/*Change the Font Size of an Element*/
h1 {
    font-size: 40px;
}

/*Set the Font Family of an Element*/
h1 {
    font-family: 'Times New Roman';

}

/*Import a Google Font*/
/*Google Fonts is a free library of web fonts that you can use in your CSS by referencing the font's URL*/
/*To import a Google Font, you can copy the font(s) URL from the Google fonts library and then past it in your HTML. We will import the Lobster font.*/
/*Now you can use the Lobster font in your CSS by using Lobster as the FAMILY_NAME as in the following example*/

/*font-family: FAMILY_NAME, GENERIC_NAME*/

h3 {
    font-size: large;
    font-family: Lobster;
    color: green;
}

h4 {
    font-size: large;
    font-family: Lobster;
    color: blue;
}

/*Specify How Fonts Should Degrade*/
/*There are several default fonts that are acailable in all browsers. ex. monospace, serif, sans-serif, etc. BUT when on efont isn't available, you can tell the browser to "Degrade" to another font*/
/*Example: If you want Helventica font, but degrade to the sans-serif font when Helvetica isnt' available*/

p {
    font-family: Helvetica, sans-serif;
}

/*Size Your Image*/
/*Css uses the property called width that controls an element's width. Ex*/
/*if you wanted to creat a CSS class called larger-image that gave HTML elements a width of 500pixels*/

.larger-image{
 width: 500px;
}

/*Add Borders Around Your Elements*/
/*CSS borders have properties like style, color, and width
for example if we wanted to tcread a red 5pixel border around an HTML elemt we could yse this class"*/

.thin-red-border {
    border-color: red;
    border-width: 5px;
    border-style: solid;
}

/*Add Rounded Corners with border-radius*/
.thin-green-border {
    border-color: green;
    border-width: 5px;
    border-style: solid;
    border-radius: 10px;
}

/*Make Circular Images with a border-radius*/
.round-blue-image {
    border-color: blue;
    border-width: 5px;
    border-style: solid;
    border-radius: 50%;
}

/*Give a Background Color to a div Element*/
/*you can ser an element's background color with the background-color property.*/
/*If you wanted an elemnt's background color to be green, you'd put this within your style element:*/

.blueviolet-background {
    background-color: blueviolet;
    width: 511px;
    border-radius: 25%;
}

/*Set the id of an Element*/
/*along with classes each HTML element can also have an id attribute*/
/*There are benefits to using an id attribute:
- Use id to style a single element
- Use id to select and modify specific elements with JavaScript*/
/*id attributes should be unique. This is best practice. Do not give more than one element the same id attribute*/


/*Use an id Attribute to Style an Element*/
/*id attributes can be styled just like classes*/
/*id have a higher spoecificity (importance) than a class, so if they are both applied and have differing syles than id style will be applied*/

#cat-photo-element{
    background-color:green;
}


/*Use Attribute Selectors to Style Elements*/



/*-------------------------------Basic HTML Part Deux---------------------------------------------------*/

/*declaring Basic HTML Part Deux ids*/

#header {
    background-color: black;
}

#head-title {
    font-family: Lobster;
    color: gold;
    text-align: center;
    text-underline-position: under;
}

#sub-title {
    font-family: Lobster;
    color: gold;
    text-align: center;
    
}


/*Adjust the Padding of an Element*/
/*Three important properties control the space that surrounds 
each HTML element: padding, margin, and border padding controls 
the amount of space between the elements contnt and it's border*/

        .injected-text {
            margin-bottom: -25px;
            text-align: center;
        }

        .box {
            border-style: solid;
            border-color: black;
            border-width: 5px;
            text-align: center;
        }

        .yellow-box {
            background-color: yellow;
            padding: 10px;
        }

        .black-box {
            background-color: black;
            color: white;
            padding: 10px;
        }

        /*Adjust the Margin of an Element*/
        /*An element's margin controls the amount of space between an element's border and surrounding elements*/

        .red-box {
            background-color: crimson;
            color: #fff;
            padding: 20px;
            margin: 20px
        }

        .blue-box {
            background-color: blue;
            color: #fff;
            padding: 20px;
            margin: 20px;
        }

        .red-box {
            background-color: crimson;
            color: #fff;
            padding: 20px;
            margin: 20px
        }
        
        /*Add a Negative Margin to an Element*/
        /*If you set an elemnt's margin to a negative value the eelemt will grow larger*/

        .green-box {
            background-color: green;
            color: #fff;
            padding: 20px;
            margin: -15px;
        }

        /*Add different padding to Each Side of an Element*/
        /*CSS allows you to control the padding of all four individual sides of an element 
        with the padding-top, padding-right, padding-bottom, and padding-left properties.*/

        .orange-box {
            background-color: orange;
            color: #fff;
            padding-top: 200px;
            padding-right: 200px;
            padding-bottom: 5px;
            padding-left: 5px;
            margin: 20px;
            text-align: center;
        }

        /*Adding Different Margins to Each Side of an Element*/
        /*Sometimes you will want to customize an element so that it has a different margin 
        on each of its sides*/
        /*CSS allows you to control the margin of all four individual sides of an element 
        with the margin-tip, margin-righ, margin-bottom, and margin-left propertites.*/

        .yellowgreen-box {
            background-color: yellowgreen;
            color: #fff;
            padding: 20px;
            margin-top: 40px;
            margin-right: 20px;
            margin-bottom: 20px;
            margin-left: 40px;
        }
        
        /*Use Clockwise Notation to Specify the Padding of an Element*/
        /*Instsead of specifying an element's padding-top, padding-right, padding-bottom, and padding-left properties individually, you can specify them all in one line... like this:*/
        /*Note: We can also do this with Margins as well*/

        .magenta-box {
            background-color: magenta;
            color: #fff;
            padding: 10px 20px 10px 20px;
            margin: 20px 10px 20px 10px; 
        }

        .magenta-box {
            background-color: magenta;
            color: #fff;
            padding: 10px 20px 10px 20px;
            margin: 20px 10px 20px 10px; 
        }
        

/*Use Attribute Selectors to Style Elements*/
/*We've been adding iD or class attributes to elements that we wish to specifically style*/
/*Use the [attr=value] attribute selector to style the checkboxes in CatPhotoApp*/

/*example*/
/*This code changes the margins of all elements with the attribute type and a 
corresponding value of radio*/

[type = 'radio'] {
    margin: 20px 0px 20px 0px;
}

/*Understand Absolute versus Relative Units*/
/*In addition to 'px' CSS has multiple different length unit options that you can use
for example 'in' and 'mm' refer to inches and millimeters respectively
These are absolute units*/


/*Adding something here*/